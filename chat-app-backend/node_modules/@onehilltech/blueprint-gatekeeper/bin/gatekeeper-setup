#!/usr/bin/env node

const winston = require ('winston');
const prompt  = require ('prompt');
const blueprint = require ('@onehilltech/blueprint');
const path = require ('path');
const fs = require ('fs-extra');
const { fromCallback } = require ('bluebird');


const appPath = path.resolve (process.cwd (), 'app');
const rcPath  = path.resolve (process.cwd (), '.gatekeeper');
const DEFAULT_SCOPE = ['gatekeeper.*'];

const schema = [
  { name: 'email', required: true },
  { name: 'connection', required: false, default: '$default'}
];

// Start the command-line prompt.
prompt.start ();

// Get the email address for the command-line client.
fromCallback (callback => prompt.get (schema, callback))
  .then (({ email, connection: connectionName }) =>
    blueprint.createApplication (appPath)
      .then (app => fs.ensureDir (rcPath)
        .then (() => {
          let { mongodb: config } = app.configs;
          let connOptions = config.connections[connectionName];

          return app.lookup ('service:mongodb').openConnection (connectionName, connOptions);
        })
        .then (() => app.lookup ('model:client').create ({type: 'native', name: 'gatekeeper-cli', email, scope: DEFAULT_SCOPE}))
        .then (client => {
          const filename = path.resolve (rcPath, client.name);

          const data = {
            client_id: client.id,
            client_secret: client.client_secret
          };

          return fs.writeJSON (filename, data, {spaces: 2})
        })
      )
      .then (() => {
        winston.log ('info', 'setup complete!');
        process.exit (0);
      })
  );
